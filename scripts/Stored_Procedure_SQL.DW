CREATE OR ALTER PROCEDURE bronze.load_bronze AS
BEGIN
	DECLARE @start_time DATETIME, @end_time DATETIME
	BEGIN TRY
		PRINT '=======================================================================================================================================';
		PRINT 'Loading Bronze Layer';
		PRINT '=======================================================================================================================================';

		PRINT '---------------------------------------------------------------------------------------------------------------------------------------';
		PRINT 'Loading CRM Tables';
		PRINT '---------------------------------------------------------------------------------------------------------------------------------------';

		SET @start_time = GETDATE();
		PRINT '>> Truncating table bronze.crm_cust_info';
		TRUNCATE TABLE bronze.crm_cust_info; -- refreshing the table every execution (full load)

			BULK INSERT bronze.crm_cust_info
			FROM 'C:\Users\mgpie\Documents\Data Warehouse (SQL)\sql-data-warehouse-project\sql-data-warehouse-project\datasets\source_crm\cust_info.csv'
			WITH (
				FIRSTROW = 2, -- The actual data in the csv starts from the second row and the csv is separated with a comma
				FIELDTERMINATOR = ',',
				TABLOCK -- tablock is used for improved performance because sql is locking the table during the loading
			);
			SET @end_time = GETDATE();
			PRINT '>> Load Duration: ' + CAST(DATEDIFF(second, @start_time, @end_time) AS NVARCHAR) + ' seconds';
			PRINT '>> ---------------------------------------------------------------------------------------------------------------------------------';
		
		SET @start_time = GETDATE();
		PRINT '>> Truncating table bronze.crm_prd_info';
		TRUNCATE TABLE bronze.crm_prd_info; -- refreshing the table every execution (full load)

			BULK INSERT bronze.crm_prd_info
			FROM 'C:\Users\mgpie\Documents\Data Warehouse (SQL)\sql-data-warehouse-project\sql-data-warehouse-project\datasets\source_crm\prd_info.csv'
			WITH (
				FIRSTROW = 2,
				FIELDTERMINATOR = ',',
				TABLOCK
			);
			SET @end_time = GETDATE();
			PRINT '>> Load Duration: ' + CAST(DATEDIFF(second, @start_time, @end_time) AS NVARCHAR) + ' seconds';
			PRINT '>> ---------------------------------------------------------------------------------------------------------------------------------';

		SET @start_time = GETDATE();
		PRINT '>> Truncating table bronze.crm_sales_details';
		TRUNCATE TABLE bronze.crm_sales_details; -- refreshing the table every execution (full load)

			BULK INSERT bronze.crm_sales_details
			FROM 'C:\Users\mgpie\Documents\Data Warehouse (SQL)\sql-data-warehouse-project\sql-data-warehouse-project\datasets\source_crm\sales_details.csv'
			WITH (
				FIRSTROW = 2,
				FIELDTERMINATOR = ',',
				TABLOCK					-- tablock command increase performance by locking the table during the loading of the table/data 
			);
			SET @end_time = GETDATE();
			PRINT '>> Load Duration: ' + CAST(DATEDIFF(second, @start_time, @end_time) AS NVARCHAR) + ' seconds';
			PRINT '>> ---------------------------------------------------------------------------------------------------------------------------------';

		PRINT '---------------------------------------------------------------------------------------------------------------------------------------';
		PRINT 'Loading ERP Tables';
		PRINT '---------------------------------------------------------------------------------------------------------------------------------------';

		SET @start_time = GETDATE();
		PRINT '>> Truncating table bronze.erp_cust_az12';
		TRUNCATE TABLE bronze.erp_cust_az12; -- refreshing the table every execution (full load)

			BULK INSERT bronze.erp_cust_az12
			FROM 'C:\Users\mgpie\Documents\Data Warehouse (SQL)\sql-data-warehouse-project\sql-data-warehouse-project\datasets\source_erp\cust_az12.csv'
			WITH (
				FIRSTROW = 2,
				FIELDTERMINATOR = ',',
				TABLOCK
			);
			SET @end_time = GETDATE();
			PRINT '>> Load Duration: ' + CAST(DATEDIFF(second, @start_time, @end_time) AS NVARCHAR) + ' seconds';
			PRINT '>> ---------------------------------------------------------------------------------------------------------------------------------';
			
		SET @start_time = GETDATE();
		PRINT '>> Truncating table bronze.erp_loc_a101';
		TRUNCATE TABLE bronze.erp_loc_a101; -- refreshing the table every execution (full load)

			BULK INSERT bronze.erp_loc_a101
			FROM 'C:\Users\mgpie\Documents\Data Warehouse (SQL)\sql-data-warehouse-project\sql-data-warehouse-project\datasets\source_erp\loc_a101.csv'
			WITH (
				FIRSTROW = 2,
				FIELDTERMINATOR = ',',
				TABLOCK
			);
			SET @end_time = GETDATE();
			PRINT '>> Load Duration: ' + CAST(DATEDIFF(second, @start_time, @end_time) AS NVARCHAR) + ' seconds';
			PRINT '>> ---------------------------------------------------------------------------------------------------------------------------------';

		SET @start_time = GETDATE();
		PRINT '>> Truncating table bronze.erp_px_cat_g1v2';
		TRUNCATE TABLE bronze.erp_px_cat_g1v2; -- refreshing the table every execution (full load)

			BULK INSERT bronze.erp_px_cat_g1v2
			FROM 'C:\Users\mgpie\Documents\Data Warehouse (SQL)\sql-data-warehouse-project\sql-data-warehouse-project\datasets\source_erp\px_cat_g1v2.csv'
			WITH (
				FIRSTROW = 2,
				FIELDTERMINATOR = ',',
				TABLOCK
			);
			SET @end_time = GETDATE();
			PRINT '>> Load Duration: ' + CAST(DATEDIFF(second, @start_time, @end_time) AS NVARCHAR) + ' seconds';
			PRINT '>> ---------------------------------------------------------------------------------------------------------------------------------';

		END TRY
		BEGIN CATCH -- we write this code to obtain any error message, number, state, etc... we could run into
			PRINT '===================================================================================================================================='
			PRINT 'ERROR OCCURED DURING LOADING BRONZE LAYER'
			PRINT 'Eror Message' + ERROR_MESSAGE();
			PRINT 'Eror Message' + CAST (ERROR_NUMBER() AS NVARCHAR);
			PRINT 'Eror Message' + CAST (ERROR_STATE() AS NVARCHAR);
			PRINT '===================================================================================================================================='
		END CATCH
END
